<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luo.seckill.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.luo.seckill.bean.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="publish_status" jdbcType="INTEGER" property="publishStatus" />
    <result column="sale_num" jdbcType="INTEGER" property="saleNum" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="seckill_price" jdbcType="DOUBLE" property="seckillPrice" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="low_stock" jdbcType="INTEGER" property="lowStock" />
    <result column="seckill_start_time" jdbcType="TIMESTAMP" property="seckillStartTime" />
    <result column="seckill_end_time" jdbcType="TIMESTAMP" property="seckillEndTime" />
    <result column="seckill_num_limit" jdbcType="INTEGER" property="seckillNumLimit" />
    <result column="sell_type" jdbcType="INTEGER" property="sellType" />
    <result column="gift_point" jdbcType="INTEGER" property="giftPoint" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, pic, publish_status, sale_num, price, seckill_price, description, stock, 
    low_stock, seckill_start_time, seckill_end_time, seckill_num_limit, sell_type, gift_point, 
    store_id
  </sql>
  <select id="selectByExample" parameterType="com.luo.seckill.bean.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getTotal" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT
        COUNT(*)
    FROM
        product
    WHERE
        product.store_id = #{storeId,jdbcType=INTEGER}
  </select>

  <select id="getShelvesNum" resultType="java.lang.Integer">
    SELECT
        COUNT(*)
    FROM
        product
    WHERE
        product.publish_status = 1
    AND product.store_id = #{storeId,jdbcType=INTEGER}
  </select>

  <select id="getTakeOffNum" resultType="java.lang.Integer">
    SELECT
        COUNT(*)
    FROM
        product
    WHERE
        product.publish_status = 0
    AND product.store_id = #{storeId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luo.seckill.bean.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luo.seckill.bean.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (name, pic, publish_status, 
      sale_num, price, seckill_price, 
      description, stock, low_stock, 
      seckill_start_time, seckill_end_time, seckill_num_limit, 
      sell_type, gift_point, store_id
      )
    values (#{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{publishStatus,jdbcType=INTEGER}, 
      #{saleNum,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{seckillPrice,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{lowStock,jdbcType=INTEGER}, 
      #{seckillStartTime,jdbcType=TIMESTAMP}, #{seckillEndTime,jdbcType=TIMESTAMP}, #{seckillNumLimit,jdbcType=INTEGER}, 
      #{sellType,jdbcType=INTEGER}, #{giftPoint,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luo.seckill.bean.Product">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="saleNum != null">
        sale_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="seckillPrice != null">
        seckill_price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="lowStock != null">
        low_stock,
      </if>
      <if test="seckillStartTime != null">
        seckill_start_time,
      </if>
      <if test="seckillEndTime != null">
        seckill_end_time,
      </if>
      <if test="seckillNumLimit != null">
        seckill_num_limit,
      </if>
      <if test="sellType != null">
        sell_type,
      </if>
      <if test="giftPoint != null">
        gift_point,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="saleNum != null">
        #{saleNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="seckillPrice != null">
        #{seckillPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="seckillStartTime != null">
        #{seckillStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="seckillEndTime != null">
        #{seckillEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="seckillNumLimit != null">
        #{seckillNumLimit,jdbcType=INTEGER},
      </if>
      <if test="sellType != null">
        #{sellType,jdbcType=INTEGER},
      </if>
      <if test="giftPoint != null">
        #{giftPoint,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luo.seckill.bean.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.publishStatus != null">
        publish_status = #{record.publishStatus,jdbcType=INTEGER},
      </if>
      <if test="record.saleNum != null">
        sale_num = #{record.saleNum,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.seckillPrice != null">
        seckill_price = #{record.seckillPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.lowStock != null">
        low_stock = #{record.lowStock,jdbcType=INTEGER},
      </if>
      <if test="record.seckillStartTime != null">
        seckill_start_time = #{record.seckillStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.seckillEndTime != null">
        seckill_end_time = #{record.seckillEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.seckillNumLimit != null">
        seckill_num_limit = #{record.seckillNumLimit,jdbcType=INTEGER},
      </if>
      <if test="record.sellType != null">
        sell_type = #{record.sellType,jdbcType=INTEGER},
      </if>
      <if test="record.giftPoint != null">
        gift_point = #{record.giftPoint,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      publish_status = #{record.publishStatus,jdbcType=INTEGER},
      sale_num = #{record.saleNum,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      seckill_price = #{record.seckillPrice,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      low_stock = #{record.lowStock,jdbcType=INTEGER},
      seckill_start_time = #{record.seckillStartTime,jdbcType=TIMESTAMP},
      seckill_end_time = #{record.seckillEndTime,jdbcType=TIMESTAMP},
      seckill_num_limit = #{record.seckillNumLimit,jdbcType=INTEGER},
      sell_type = #{record.sellType,jdbcType=INTEGER},
      gift_point = #{record.giftPoint,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luo.seckill.bean.Product">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="saleNum != null">
        sale_num = #{saleNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="seckillPrice != null">
        seckill_price = #{seckillPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="lowStock != null">
        low_stock = #{lowStock,jdbcType=INTEGER},
      </if>
      <if test="seckillStartTime != null">
        seckill_start_time = #{seckillStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="seckillEndTime != null">
        seckill_end_time = #{seckillEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="seckillNumLimit != null">
        seckill_num_limit = #{seckillNumLimit,jdbcType=INTEGER},
      </if>
      <if test="sellType != null">
        sell_type = #{sellType,jdbcType=INTEGER},
      </if>
      <if test="giftPoint != null">
        gift_point = #{giftPoint,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luo.seckill.bean.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      publish_status = #{publishStatus,jdbcType=INTEGER},
      sale_num = #{saleNum,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      seckill_price = #{seckillPrice,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      low_stock = #{lowStock,jdbcType=INTEGER},
      seckill_start_time = #{seckillStartTime,jdbcType=TIMESTAMP},
      seckill_end_time = #{seckillEndTime,jdbcType=TIMESTAMP},
      seckill_num_limit = #{seckillNumLimit,jdbcType=INTEGER},
      sell_type = #{sellType,jdbcType=INTEGER},
      gift_point = #{giftPoint,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>